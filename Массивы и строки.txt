using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            bool checkForPoint = true;
            int spaceCount = 0;

            for (; checkForPoint;)
            {
                Console.Clear();
                Console.WriteLine("Ââåäèòå îäèí ñèìâîë (ââåäèòå òî÷êó äëÿ çàâåðøåíèÿ ðàáîòû ïðîãðàììû): ");
                string checkWord = Console.ReadLine();

                if (checkWord.Length > 1)
                {
                    Console.WriteLine("Íåîáõîäèìî ââåñòè âñåãî îäèí ñèìâîë. Ïîïðîáóéòå åùå ðàç.");
                    Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü...");
                    Console.ReadLine();
                    continue;
                }

                if (checkWord.Contains(" "))
                {
                    ++spaceCount;
                }

                if (checkWord.Contains("."))
                {
                    Console.WriteLine("Âû ââåëè " + spaceCount + " ïðîáåëîâ.");
                    Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                    Console.ReadLine();
                    checkForPoint = false;
                }
            }

            Console.Clear();
            Console.WriteLine("Ââåäèòå øåñòèçíà÷íîå ÷èñëî: ");
            int busTicket;
            bool tryParse = Int32.TryParse(Console.ReadLine(), out busTicket);

            string checkTicket = busTicket.ToString();
            if (checkTicket.Length != 6)
            {
                Console.WriteLine("Âû ââåëè íå øåñòèçíà÷íîå ÷èñëî.");
                Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                Console.ReadLine();
            }
            else
            {
                int hundredThousand = busTicket / 100000;
                int decadeThousand = busTicket % 100000 / 10000;
                int pointThousand = busTicket % 10000 / 1000;
                int hundred = busTicket % 1000 / 100;
                int decade = busTicket % 100 / 10;
                int point = busTicket % 10;
                int firstPart = hundredThousand + decadeThousand + pointThousand, secondPart = hundred + decade + point;
                if (firstPart == secondPart)
                {
                    Console.WriteLine("Ýòî ñ÷àñòëèâîå ÷èñëî.");
                    Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                    Console.ReadLine();
                }
                else
                {
                    Console.WriteLine("Ýòî íå ñ÷àñòëèâîå ÷èñëî.");
                    Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                    Console.ReadLine();
                }
            }

            Console.Clear();
            bool checkCycle = true;
            for (; checkCycle;)
            {
                Console.Clear();
                Console.WriteLine("Ââåäèòå îäèí ñèìâîë (ââåäèòå òî÷êó äëÿ çàâåðøåíèÿ ðàáîòû ïðîãðàììû): ");
                string checkWord = Console.ReadLine();
                byte[] wordAscii = Encoding.ASCII.GetBytes(checkWord);

                if (wordAscii[0] >= 65 && wordAscii[0] <= 90)
                {
                    wordAscii[0] += 32;
                    checkWord = Encoding.ASCII.GetString(wordAscii);
                    Console.WriteLine("Ïðåîáðàçîâàííàÿ áóêâà - " + checkWord);
                    Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                    Console.ReadLine();
                }
                else
                {
                    if (wordAscii[0] > 90 && wordAscii[0] <= 122)
                    {
                        wordAscii[0] -= 32;
                        checkWord = Encoding.ASCII.GetString(wordAscii);
                        Console.WriteLine("Ïðåîáðàçîâàííàÿ áóêâà - " + checkWord);
                        Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                        Console.ReadLine();
                    }
                    else
                    {
                        if (wordAscii[0] == 46)
                        {
                            Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
                            checkCycle = false;
                            Console.ReadLine();
                        }
                    }
                }
            }

            Console.Clear();
            Console.WriteLine("Ââåäèòå äâà ÷èñëà (ïåðâîå äîëæíî áûòü ìåíüøå âòîðîãî): ");
            int firstNumber, secondNumber;
            tryParse = Int32.TryParse(Console.ReadLine(), out firstNumber);
            tryParse = Int32.TryParse(Console.ReadLine(), out secondNumber);
            if (secondNumber < firstNumber)
            {
                Console.WriteLine("Âòîðîå ÷èñëî äîëæíî áûòü áîëüøå ïåðâîãî.");
            }
            else
            {
                for (int i = firstNumber; i <= secondNumber; ++i)
                {
                    for (int j = 0; j < i; ++j)
                    {
                        Console.Write(i + " ");
                    }
                    Console.WriteLine();
                }
            }
            Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
            Console.ReadLine();

            Console.Clear();
            Console.WriteLine("Ââåäèòå ÷èñëî (îíî äîëæíî áûòü áîëüøå 0): ");
            int notReverseNumber;
            string reverseNumber="";
            tryParse = Int32.TryParse(Console.ReadLine(), out notReverseNumber);

            string reverseNumberLength = notReverseNumber.ToString();

            for(int i=0;i<reverseNumberLength.Length;++i)
            {
                reverseNumber += notReverseNumber % 10;
                notReverseNumber /= 10;
            }

            Console.WriteLine(reverseNumber);
            Console.WriteLine("Íàæìèòå \"Enter\" ÷òîáû ïðîäîëæèòü ðàáîòó ïðîãðàììû...");
            Console.ReadLine();
        }
    }
}
